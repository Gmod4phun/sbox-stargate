@using System;
@using System.Collections.Generic;
@using System.Linq;
@using Sandbox;
@using Sandbox.UI;

<style>

	.frame {
		width: 100%;
		height: 100%;
	}

	.pattern {
		width: 100%;
		height: 100%;
		background-image-tint: @SGCComputer.ColorSgYellow.Rgb;
		background-size: cover;
	}

</style>

<root class="frame">

	@{
		var patternStyle = $"background-image: url(\"materials/sbox_stargate/programs/elements/octagonbox/octagonbox_pattern_{CurrentPattern}.png\"); transform: rotate({CurrentRotation});";
		<div class="pattern" style=@patternStyle></div>
	}
	
</root>

@code {

	private int CurrentPattern = 1; // one of 20 patterns
	private int CurrentRotation = 0; // 4 different rotations

	private TimeSince lastRefresh = 0;
	private Random rnd = new Random();

	private void Animate()
	{
		if (lastRefresh < 0.15)
			return;

		CurrentPattern = rnd.Next(1, 21);
		CurrentRotation = 90 * rnd.Next(0, 5);

		lastRefresh = 0;
	}

	protected override void OnAfterTreeRender(bool firstTime)
	{
		Animate();
	}

	protected override int BuildHash()
	{
		return HashCode.Combine(Time.Now);
	}

}
