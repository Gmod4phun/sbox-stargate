@using System;
@using System.Collections.Generic;
@using Sandbox;
@using Sandbox.UI;

<style>

	.frame {
		width: 100%;
		height: 100%;
		border: 0.5% solid @SGCComputer.ColorSgBlue.Rgb;
	}

	.gatebox_lines {
		position: absolute;
		height: 100%;
		width: 100%;
		background-image: url("materials/sbox_stargate/programs/dialing/gatebox_lines.png");
		background-image-tint: @SGCComputer.ColorSgBlue.Rgb;
		background-size: contain;
		background-repeat: no-repeat;
		background-position: center;
	}

	.gate_container {
		position: absolute;
		height: 99%;
		left: 50%;
		transform: translate(-50% 0%);
		align-self: center;
		aspect-ratio: 1;
	}

	.gate {
		background-image-tint: @SGCComputer.ColorSgBlue.Rgb;
	}

	.gate_ring_container {
		position: absolute;
		height: 99%;
		left: 50%;
		transform: translate(-50% 0%);
		aspect-ratio: 1;
		align-self: center;
	}

	.gate_ring {
		background-image-tint: @SGCComputer.ColorSgYellow.Rgb;
		transform-origin: 0% 50%;
	}

	.gate_chevrons_container {
		position: absolute;
		height: 99%;
		left: 50%;
		transform: translate(-50% 0%);
		align-self: center;
		aspect-ratio: 1;
	}

	.gate_chevron {
		position: absolute;
		height: 100%;
		width: 100%;
		background-image: url("materials/sbox_stargate/programs/dialing/gate_chevron.png");
		background-image-tint: @SGCComputer.ColorSgYellow.Rgb;
		background-size: contain;
		background-repeat: no-repeat;
		background-position: center;
		transform-origin: 0% 50%;

		&.main {
			background-image: url("materials/sbox_stargate/programs/dialing/gate_chevron_main.png");
		}

		&.active {
			background-image-tint: red;
		}
	}

	.gate_chevron_crystal {
		background-image-tint: @SGCComputer.ColorSgBlue.Rgb;

		&.active {
			background-image-tint: red;
		}
	}

	.gate_chevron_wings {
		position: absolute;
		height: 100%;
		width: 100%;
		background-image: url("materials/sbox_stargate/programs/dialing/gate_chevron_wings_all.png");
		background-image-tint: @SGCComputer.ColorSgYellow.Rgb;
		background-size: contain;
		background-repeat: no-repeat;
		background-position: center;
		transform-origin: 0% 50%;
	}

	@@keyframes blink_indicator {
		  0% { opacity: 0; }
		  50% { opacity: 1; }
		  100% { opacity: 0; }
	}

	.gate_chevron_indicator {
		position: absolute;
		height: 100%;
		width: 100%;
		background-image: url("materials/sbox_stargate/programs/dialing/gate_chevron_main_indicator.png");
		background-image-tint: transparent;
		background-size: contain;
		background-repeat: no-repeat;
		background-position: center;

		&.blink {
			background-image-tint: red;
			animation-name: blink_indicator;
			animation-duration: 0.33s;
			animation-iteration-count: 3;
			animation-direction: normal;
		}
	}

	.gatebox_offworld {
		position: absolute;
		height: 100%;
		width: 100%;
		background-image: url("materials/sbox_stargate/programs/dialing/gatebox_offworld.png");
		background-image-tint: red;
		background-size: contain;
		background-repeat: no-repeat;
		background-position: center;
	}

</style>

<div class="frame">
	<div class="gatebox_lines"></div>

	<div class="gate_container">
		<img src="materials/sbox_stargate/programs/dialing/gate_base.png" class="gate" />
	</div>

	@{
		var ringAng = Gate.IsValid() ? Gate.GetRingAngle() : 0;
		<div class="gate_ring_container">
			<img src="materials/sbox_stargate/programs/dialing/gate_ring.png" class="gate_ring" style="transform: rotate(@ringAng)" />
		</div>
	}

	<div class="gate_chevrons_container">
		@{
			for (int i = 0; i < 9; i++)
			{
				var chevClass = "gate_chevron";
				var crystalClass = "gate_chevron_crystal";
				var rotateStyle = $"transform: rotate({chevronAngles[i]})";

				if (i == 6)
					chevClass += " main";

				if (Gate.IsValid() && Gate.IsChevronActive(i + 1))
				{
					chevClass += " active";
					crystalClass += " active";
				}

				<div class=@chevClass style=@rotateStyle>
					<img class=@crystalClass src="materials/sbox_stargate/programs/dialing/gate_chevron_crystal.png" />
				</div>
			}
		}

		<div class="gate_chevron_wings"></div>

		<div class="gate_chevron_indicator" @ref=indicator></div>
	</div>

	@{
		if (Gate.IsValid() && Gate.Inbound)
		{
			var offworldStyle = $"opacity: {SGCComputer.GetSinFromTime()}";
			<div class="gatebox_offworld" style=@offworldStyle></div>
		}
	}
	
</div>

@code {
	public Stargate Gate;

	private List<int> chevronAngles = new() { 40, 80, 120, 240, 280, 320, 0, 160, 200 };

	Panel indicator;

	public async void ChevronIndicatorBlink()
	{
		indicator.SetClass("blink", true);
		await GameTask.DelaySeconds(1);
		indicator.SetClass("blink", false);
	}

	protected override int BuildHash()
	{
		return HashCode.Combine(Time.Now);
	}

}
